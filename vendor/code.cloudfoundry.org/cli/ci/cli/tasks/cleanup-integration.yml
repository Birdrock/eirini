---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: cfcli/cli-base

inputs:
- name: cli-ci
- name: cf-cli-binaries
- name: bosh-lock
- name: vars-store

outputs:
- name: cleanup-integration-outputs

params:
  ARGS:

run:
  path: bash
  args:
  - -c
  - |
    set -e

    ENV=$(cat bosh-lock/name | cut -d "." -f 1)

    pushd vars-store/ci/infrastructure/$ENV
      if [[ "$(cat bbl-state.json | jq -r '.bblVersion')" =~ v5 ]]; then
        eval "$(bbl5 print-env | grep -v '^ssh')"
        export JUMPBOX_IP=$(bosh int vars/jumpbox-vars-file.yml --path /external_ip)
        export CREDHUB_PROXY="ssh+socks5://jumpbox@${JUMPBOX_IP}:22?private-key=$JUMPBOX_PRIVATE_KEY"
        credhub1 login --username=credhub-cli --password="$CREDHUB_PASSWORD" --server="$CREDHUB_SERVER"

        export CF_INT_PASSWORD=$(credhub1 get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)
      else
        eval "$(bbl print-env)"
        credhub login

        export CF_INT_OIDC_PASSWORD=$(credhub get -n /bosh-$ENV/cf/uaa_oidc_admin_password | bosh interpolate --path /value -)
        export CF_INT_PASSWORD=$(credhub get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)
      fi
    popd

    set -x

    # output password into a temp file for consumption by Windows
    echo $CF_INT_PASSWORD > cleanup-integration-outputs/cf-password
    echo $CF_INT_OIDC_PASSWORD > cleanup-integration-outputs/uaa-oidc-password

    set -ex

    domain=$(cat bosh-lock/name)
    export CF_INT_API="https://api.${domain}"

    export PATH=$GOPATH/bin:$PATH

    pushd cf-cli-binaries
      tar xvzf cf-cli-binaries.tgz
      chmod +x cf-cli_linux_x86-64
      mv cf-cli_linux_x86-64 $GOPATH/bin/cf
    popd

    cd cli-ci
    bin/cleanup-integration "${ARGS}"
